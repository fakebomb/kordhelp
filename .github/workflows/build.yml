name: Build APK
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install buildozer cython
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          python3-dev \
          openjdk-17-jdk \
          zlib1g-dev \
          libncurses6 \
          cmake \
          libffi-dev \
          libssl-dev \
          unzip
    
    - name: Install Buildozer dependencies
      run: |
        sudo pip3 install buildozer
        sudo apt-get install -y \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsdl2-ttf-dev \
          libportmidi-dev \
          libswscale-dev \
          libavformat-dev \
          libavcodec-dev
    
    - name: Install Android SDK
      run: |
        # Перевіряємо наявність wget і unzip
        which wget || (echo "wget not found" && exit 1)
        which unzip || (echo "unzip not found" && exit 1)
        
        # Завантажуємо Android Command Line Tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip || (echo "Failed to download commandlinetools" && exit 1)
        ls -la commandlinetools-linux-11076708_latest.zip
        
        # Розпаковуємо архів
        mkdir -p android-sdk/cmdline-tools
        unzip commandlinetools-linux-11076708_latest.zip -d android-sdk/cmdline-tools || (echo "Failed to unzip commandlinetools" && exit 1)
        rm commandlinetools-linux-11076708_latest.zip
        
        # Перевіряємо структуру
        ls -la android-sdk/cmdline-tools
        find android-sdk -type f -name "sdkmanager"
        
        # Припускаємо, що sdkmanager у вкладеній директорії
        mv android-sdk/cmdline-tools/cmdline-tools android-sdk/cmdline-tools/latest || (echo "Failed to rename cmdline-tools to latest" && exit 1)
        
        # Перевіряємо наявність sdkmanager
        ls -la android-sdk/cmdline-tools/latest/bin/sdkmanager || (echo "sdkmanager not found in expected path" && exit 1)
        
        # Приймаємо всі ліцензії через порожній пайп
        echo "y" | android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=android-sdk --licenses > /dev/null 2>&1 || true
        echo "y" | android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=android-sdk --update || true
        
        # Використовуємо стабільну версію build-tools замість 36.0.0
        echo "y" | android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=android-sdk "platform-tools" "build-tools;34.0.0" "platforms;android-33" "extras;android;m2repository" "extras;google;m2repository" || (echo "Failed to run sdkmanager (install)" && exit 1)
        
        # Перевіряємо, чи встановлено компоненти
        ls -la android-sdk/build-tools || echo "Build tools directory not found"
        
        # Додаємо SDK до PATH
        echo "ANDROID_SDK_ROOT=$GITHUB_WORKSPACE/android-sdk" >> $GITHUB_ENV
        echo "$GITHUB_WORKSPACE/android-sdk/platform-tools" >> $GITHUB_PATH
        echo "$GITHUB_WORKSPACE/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
    
    - name: Initialize Buildozer
      run: |
        [ -f buildozer.spec ] && rm buildozer.spec
        buildozer init
    
    - name: Configure buildozer.spec
      run: |
        echo "[app]" > buildozer.spec
        echo "title = KordHelp" >> buildozer.spec
        echo "package.name = kordhelp" >> buildozer.spec
        echo "package.domain = org.test" >> buildozer.spec
        echo "source.dir = ." >> buildozer.spec
        echo "source.include_exts = py,png,jpg,kv,db,json,txt" >> buildozer.spec
        echo "version = 1.0" >> buildozer.spec
        echo "requirements = python3,kivy" >> buildozer.spec
        echo "android.permissions = INTERNET" >> buildozer.spec
        echo "android.api = 33" >> buildozer.spec
        # Додаємо шлях до SDK та інструментів
        echo "android.sdk_path = $GITHUB_WORKSPACE/android-sdk" >> buildozer.spec
        echo "android.accept_sdk_license = True" >> buildozer.spec
        echo "android.build_tools = 34.0.0" >> buildozer.spec
        echo "android.cmdline_tools_path = $GITHUB_WORKSPACE/android-sdk/cmdline-tools/latest/bin" >> buildozer.spec
        echo "android.skip_update = True" >> buildozer.spec
        # Встановлюємо шлях до python-for-android
        echo "p4a.source_dir = $HOME/.buildozer/android/platform/python-for-android" >> buildozer.spec
        # Встановлюємо рецепт для бази даних (sqlite3)
        echo "android.recipes_dir = $HOME/.buildozer/android/platform/python-for-android/recipes" >> buildozer.spec
        echo "android.bootstrap = sdl2" >> buildozer.spec
        echo "log_level = 2" >> buildozer.spec
    
    - name: Setup Python-for-Android
      run: |
        # Створюємо директорію для buildozer
        mkdir -p $HOME/.buildozer/android/platform
        
        # Клонуємо Python-for-Android
        git clone https://github.com/kivy/python-for-android.git $HOME/.buildozer/android/platform/python-for-android
        
        # Перевіряємо, що директорія існує
        ls -la $HOME/.buildozer/android/platform/python-for-android
    
    - name: Create symbolic links for sdkmanager
      run: |
        # Створюємо директорію tools для зворотної сумісності
        mkdir -p $GITHUB_WORKSPACE/android-sdk/tools/bin
        # Створюємо символічне посилання на sdkmanager в новому місці
        ln -sf $GITHUB_WORKSPACE/android-sdk/cmdline-tools/latest/bin/sdkmanager $GITHUB_WORKSPACE/android-sdk/tools/bin/sdkmanager
        # Перевіряємо, що посилання створено
        ls -la $GITHUB_WORKSPACE/android-sdk/tools/bin/
    
    - name: Build APK
      run: |
        # Встановлюємо змінні середовища для Buildozer
        export ANDROID_HOME=$GITHUB_WORKSPACE/android-sdk
        export PATH=$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
        
        # Відлагоджувальна інформація
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "PATH: $PATH"
        echo "Перевірка наявності sdkmanager:"
        which sdkmanager || echo "sdkmanager не знайдено в PATH"
        
        # Спроба виконати buildozer з детальним логом
        buildozer -v android debug
        ls -la bin/  # Перевіряємо вміст папки bin
        if [ -f "bin/kordhelp-"*".apk" ]; then echo "APK found"; else echo "APK not found"; fi
